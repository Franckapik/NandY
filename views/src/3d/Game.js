/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import * as THREE from 'three'
import React, { useEffect, useRef } from 'react'
import { useLoader, useFrame } from 'react-three-fiber'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'
import game from './game.gltf'
import {useBox, usePlane} from 'use-cannon'
import useStore from '.././store/store'

export default function Model(props) {
  const group = useRef()
  const { nodes, materials} = useLoader(GLTFLoader, game)

  const [joueur, apiPlayer] = useBox(() => ({mass: 5, position: [ 0, 5, 0 ], onCollide: e => {console.log("Hey")}}))
  const [mur, apiMur] = useBox(() => ({type:"static", position: [-15.49, 1, 0]}))
  const [ground, apiGround] = useBox(() => ({type:"static", mass: 0, position: [0,0,0], ...props}))
  const [plane] = useBox(() => ({mass: 0, args: 0.8, ...props}))
  //store

    //fps actions
  useFrame(({clock})=> {
    apiMur.position.set(Math.sin(clock.getElapsedTime()) * 10, 0, 15)
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <scene name="Scene">
        <mesh ref={plane} material={materials.Sol} geometry={nodes.Plane.geometry} name="Plane" />
        <mesh ref={joueur} material={materials.Carrosseriej1} geometry={nodes.J1.geometry} name="J1" />
        <mesh position={[0,5,5]} material={materials.Carrosseriej2} geometry={nodes.J2.geometry} name="J2" />
        <mesh ref={mur} material={materials.MurM} geometry={nodes.Mur.geometry} name="Mur" position={[-15.18, 2, 0]} />
      </scene>
    </group>
  )
}
