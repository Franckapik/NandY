/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import * as THREE from 'three'
import React, { useEffect, useRef, useState } from 'react'
import { useLoader, useFrame } from 'react-three-fiber'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'

import game from './game.gltf'

export default function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useLoader(GLTFLoader, game)


  const actions = useRef()
  const [mixer] = useState(() => new THREE.AnimationMixer())
  useFrame((state, delta) => mixer.update(delta))
  useEffect(() => {
    actions.current = {
      Action: mixer.clipAction(animations[0], group.current)
    }
    return () => animations.forEach(clip => mixer.uncacheClip(clip))
  }, [])


  return (
    <group ref={group} {...props} dispose={null}>
      <scene name="Scene">
        <mesh material={materials.Sol} geometry={nodes.Plane.geometry} name="Plane" scale={[20, 20, 20]} />
        <mesh
          material={materials.Carrosseriej1}
          geometry={nodes.J1.geometry}
          name="J1"
          position={[0, 1, 18.69]}
          scale={[0.5, 0.5, 0.5]}
        />
        <mesh
          material={materials.Carrosseriej2}
          geometry={nodes.J2.geometry}
          name="J2"
          position={[3.8, 1, 18.69]}
          scale={[0.5, 0.5, 0.5]}
        />
        <mesh material={materials.MurM} geometry={nodes.Mur.geometry} name="Mur" position={[-15.49, 1, 0]} onClick={e => actions.current.Action.play()} />
      </scene>
    </group>
  )
}
