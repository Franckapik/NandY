/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useLoader, useFrame } from 'react-three-fiber'
import {useSelector} from 'react-redux'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'
import Master from "../gltf/essai.gltf";
import lerp from 'lerp'
import {useBox, usePlane } from 'use-cannon'


export default function Model(props) {

  const [cube2, api] = useBox(() => ({ mass: 1, position: [0, 5, 0], ...props }))
  const [plane, api2] = usePlane(() => ({ rotation: [-Math.PI / 2, 0, 0]}))
  
  const group = useRef()
  const { nodes, materials } = useLoader(GLTFLoader, Master)
  const cube =useRef()

  const position = useSelector(state => state.profile.positionSocket)
  let lastY = 10;

  let keys = useSelector(state => state.keys)

  useFrame(()=> (
    keys.up && api.applyImpulse([0.5,0,0], [0,0,0])
  ))



  return (
    <group ref={group} {...props} dispose={null}>
      <mesh ref={plane} material={nodes.Plane.material} geometry={nodes.Plane.geometry} scale={[6.59, 6.59, 6.59]} />
      <mesh ref={cube2} material={materials.Material} geometry={nodes.Cube.geometry} position={[20, 0, 0]} />
    </group>
  )
}
